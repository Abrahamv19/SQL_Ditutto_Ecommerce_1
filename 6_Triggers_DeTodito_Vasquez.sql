-- 2 TRIGGERS POR CADA UNA DE DOS TABLAS - detodito_ecommerce

-- PRIMEROS 2 TRIGGERS - TABLA CLIENTE: PRIMER TRIGGER BEFORE INSERT, SEGUNDO TRIGGER AFTER DELETE
USE detodito_ecommerce ;
SELECT * FROM CLIENTES ;

-- SET SQL_SAFE_UPDATES = 0;

-- PRIMERO DEBO CREAR LA TABLA LOG_AUDIT_CLIENTES PARA ALAMCENAR LOS REGRISTROS DE LOS TRIGGERS
DROP TABLE IF EXISTS LOG_AUDIT_CLIENTES;
CREATE TABLE LOG_AUDIT_CLIENTES (
id_log INT AUTO_INCREMENT ,
nombre_accion VARCHAR(50) ,
nombre_tabla VARCHAR(50) ,
usuario VARCHAR(50) ,
fecha_ins DATE ,
hora_ins TIME,
PRIMARY KEY (id_log)

);
-- REVISO QUE SE HAYA CREADO LA TABLA LOG_AUDIT_CLIENTES
SELECT * FROM LOG_AUDIT_CLIENTES ;

-- PRIMER TRIGUER: BEFORE INSERT - ESTE TRIGGER SE EJECUTA ANTES DE UNA INSERCION DE CLIENTES
DROP TRIGGER IF EXISTS trg_log_b_ins_clientes 

DELIMITER //
CREATE TRIGGER trg_log_b_ins_clientes
BEFORE INSERT ON CLIENTES 
FOR EACH ROW 

BEGIN
INSERT INTO LOG_AUDIT_CLIENTES (nombre_accion, nombre_tabla, usuario, fecha_ins, hora_ins)
VALUES ('INSERT' , 'CLIENTES', CURRENT_USER(), NOW(), TIME(NOW()) );
END//

DELIMITER ; 

-- INSERT
INSERT INTO CLIENTES
VALUES (17 , '1', '2', '3', 'Homero', 'Simpson', 'homer@g.com', '3453900088', '2024-06-19' );

SELECT * FROM CLIENTES ;
SELECT * FROM LOG_AUDIT_CLIENTES ;

-- SEGUNDO TRIGGER: AFTER DELETE - ESTE TRIGGER SE EJECUTA DESPUES DE LA ELIMINACION DE UN CLIENTE
DROP TRIGGER IF EXISTS trg_log_a_del_clientes 

DELIMITER //
CREATE TRIGGER trg_log_a_del_clientes
AFTER DELETE ON CLIENTES 
FOR EACH ROW 

BEGIN
INSERT INTO LOG_AUDIT_CLIENTES (nombre_accion, nombre_tabla, usuario, fecha_ins, hora_ins)
VALUES ('DELETE' , 'CLIENTES', CURRENT_USER(), NOW(), TIME(NOW()) );
END//

DELIMITER ; 

-- DELETE 
DELETE FROM CLIENTES
WHERE id_cliente = 17;

SELECT * FROM CLIENTES ;
SELECT * FROM LOG_AUDIT_CLIENTES ;


-- """""""""""""""""""""""""""""""""""""
-- SEGUNDOS 2 TRIGGERS - TABLA PAIS: PRIMER TRIGGER BEFORE INSERT, SEGUNDO TRIGGER AFTER UPDATE
USE detodito_ecommerce ;
SELECT * FROM PAIS ;

SET SQL_SAFE_UPDATES = 0;

-- PRIMERO DEBO CREAR LA TABLA LOG_AUDIT_PAIS PARA ALAMCENAR LOS REGRISTROS DE LOS TRIGGERS
DROP TABLE IF EXISTS LOG_AUDIT_PAIS;
CREATE TABLE LOG_AUDIT_PAIS (
id_log INT AUTO_INCREMENT ,
nombre_accion VARCHAR(50) ,
nombre_tabla VARCHAR(50) ,
usuario VARCHAR(50) ,
fecha_ins DATE ,
hora_ins TIME,
PRIMARY KEY (id_log)

);

-- REVISO QUE SE HAYA CREADO LA TABLA LOG_AUDIT_PAIS
SELECT * FROM LOG_AUDIT_PAIS ;

-- PRIMER TRIGUER: BEFORE INSERT - ESTE TRIGER SE EJECUTA ANTES DE INGRESAR UN PAIS
DROP TRIGGER IF EXISTS trg_log_b_ins_pais 

DELIMITER //
CREATE TRIGGER trg_log_b_ins_pais
BEFORE INSERT ON PAIS 
FOR EACH ROW 

BEGIN
INSERT INTO LOG_AUDIT_PAIS (nombre_accion, nombre_tabla, usuario, fecha_ins, hora_ins)
VALUES ('INSERT' , 'PAIS', CURRENT_USER(), NOW(), TIME(NOW()) );
END//

DELIMITER ; 

-- INSERT
INSERT INTO PAIS
VALUES (16 , 'paraguay', 'suramerica', 'castellano', 7000000, 'TROPICAL', 400000, '7000', '2025-06-19' );

SELECT * FROM PAIS ;
SELECT * FROM LOG_AUDIT_PAIS ;

-- SEGUNDO TRIGGER: AFTER UPDATE - ESTE TRIGGER SE EJECUTA DESPUES DE UNA ACTUALIZACION DE PAIS
DROP TRIGGER IF EXISTS trg_log_a_upd_pais 

DELIMITER //
CREATE TRIGGER trg_log_a_upd_pais
AFTER UPDATE ON PAIS 
FOR EACH ROW 

BEGIN
INSERT INTO LOG_AUDIT_PAIS (nombre_accion, nombre_tabla, usuario, fecha_ins, hora_ins)
VALUES ('UPDATE' , 'PAIS', CURRENT_USER(), NOW(), TIME(NOW()) );
END//

DELIMITER ; 

-- UPDATE 
UPDATE PAIS SET numero_clientes=9000 WHERE nombre='paraguay';

SELECT * FROM PAIS ;
SELECT * FROM LOG_AUDIT_PAIS ;

